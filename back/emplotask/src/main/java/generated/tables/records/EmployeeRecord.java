/*
 * This file is generated by jOOQ.
 */
package generated.tables.records;


import generated.tables.Employee;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployeeRecord extends UpdatableRecordImpl<EmployeeRecord> implements Record5<Integer, String, String, String, Integer> {

    private static final long serialVersionUID = -128044924;

    /**
     * Setter for <code>emplotask.employee.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>emplotask.employee.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>emplotask.employee.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>emplotask.employee.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>emplotask.employee.post</code>.
     */
    public void setPost(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>emplotask.employee.post</code>.
     */
    public String getPost() {
        return (String) get(2);
    }

    /**
     * Setter for <code>emplotask.employee.branch</code>.
     */
    public void setBranch(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>emplotask.employee.branch</code>.
     */
    public String getBranch() {
        return (String) get(3);
    }

    /**
     * Setter for <code>emplotask.employee.boss_id</code>.
     */
    public void setBossId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>emplotask.employee.boss_id</code>.
     */
    public Integer getBossId() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, String, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, String, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Employee.EMPLOYEE.ID;
    }

    @Override
    public Field<String> field2() {
        return Employee.EMPLOYEE.NAME;
    }

    @Override
    public Field<String> field3() {
        return Employee.EMPLOYEE.POST;
    }

    @Override
    public Field<String> field4() {
        return Employee.EMPLOYEE.BRANCH;
    }

    @Override
    public Field<Integer> field5() {
        return Employee.EMPLOYEE.BOSS_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getPost();
    }

    @Override
    public String component4() {
        return getBranch();
    }

    @Override
    public Integer component5() {
        return getBossId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getPost();
    }

    @Override
    public String value4() {
        return getBranch();
    }

    @Override
    public Integer value5() {
        return getBossId();
    }

    @Override
    public EmployeeRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public EmployeeRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public EmployeeRecord value3(String value) {
        setPost(value);
        return this;
    }

    @Override
    public EmployeeRecord value4(String value) {
        setBranch(value);
        return this;
    }

    @Override
    public EmployeeRecord value5(Integer value) {
        setBossId(value);
        return this;
    }

    @Override
    public EmployeeRecord values(Integer value1, String value2, String value3, String value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EmployeeRecord
     */
    public EmployeeRecord() {
        super(Employee.EMPLOYEE);
    }

    /**
     * Create a detached, initialised EmployeeRecord
     */
    public EmployeeRecord(Integer id, String name, String post, String branch, Integer bossId) {
        super(Employee.EMPLOYEE);

        set(0, id);
        set(1, name);
        set(2, post);
        set(3, branch);
        set(4, bossId);
    }
}
